{
  "components": [
    {
      "tag": "Struct",
      "name": "AudioListenerComponent",
      "label": "Audio Listener Component",
      "default_values": "{ direction: [0.0, 0.0, 0.0], id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), left_ear_offset: [0.0, 0.0, 0.0], right_ear_offset: [0.0, 0.0, 0.0] }",
      "docs": null,
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Uuid",
            "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
            "ty": {
              "tag": "Uuid"
            }
          }
        },
        {
          "name": "direction",
          "label": "Direction",
          "docs": null,
          "ty": {
            "tag": "Newtype",
            "name": "Unit",
            "default_values": "[0.0, 0.0, 0.0]",
            "ty": {
              "tag": "Custom",
              "name": "Vector3",
              "default_values": "[0.0, 0.0, 0.0]",
              "ty": "Vector3<f32>"
            }
          }
        },
        {
          "name": "right_ear_offset",
          "label": "Right Ear Offset",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Vector3",
            "default_values": "[0.0, 0.0, 0.0]",
            "ty": "Vector3<f32>"
          }
        },
        {
          "name": "left_ear_offset",
          "label": "Left Ear Offset",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Vector3",
            "default_values": "[0.0, 0.0, 0.0]",
            "ty": "Vector3<f32>"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "AudioSourceComponent",
      "label": "Audio Source Component",
      "default_values": "{ audio_id: (() => { \n            return Symbol.for(\"AudioId\");\n           })(), id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), should_loop: false, spatial: null, state: \"Stopped\", volume: 0.0 }",
      "docs": "WIP",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Uuid",
            "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
            "ty": {
              "tag": "Uuid"
            }
          }
        },
        {
          "name": "audio_id",
          "label": "Audio Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Audio",
            "default_values": "(() => { \n            return Symbol.for(\"AudioId\");\n           })()",
            "ty": "AudioId"
          }
        },
        {
          "name": "state",
          "label": "State",
          "docs": null,
          "ty": {
            "tag": "Enum",
            "name": "SourceState",
            "label": "Source State",
            "default_values": "\"Stopped\"",
            "docs": null,
            "variants": [
              {
                "tag": "Unit",
                "name": "Stopped",
                "docs": null,
                "default_values": "\"Stopped\""
              },
              {
                "tag": "Unit",
                "name": "Starting",
                "docs": null,
                "default_values": "\"Starting\""
              },
              {
                "tag": "Unit",
                "name": "Playing",
                "docs": null,
                "default_values": "\"Playing\""
              },
              {
                "tag": "Unit",
                "name": "Finished",
                "docs": null,
                "default_values": "\"Finished\""
              }
            ],
            "private": false
          }
        },
        {
          "name": "should_loop",
          "label": "Should Loop",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "Boolean"
            },
            "default_values": "false"
          }
        },
        {
          "name": "volume",
          "label": "Volume",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        },
        {
          "name": "spatial",
          "label": "Spatial",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Option",
            "default_values": "null",
            "ty": {
              "tag": "Option",
              "data": {
                "tag": "Struct",
                "name": "SpatialAudioConfig",
                "label": "Spatial Audio Config",
                "default_values": "{ falloff_distance: 0.0 }",
                "docs": null,
                "fields": [
                  {
                    "name": "falloff_distance",
                    "label": "Falloff Distance",
                    "docs": null,
                    "ty": {
                      "tag": "Primitive",
                      "ty": {
                        "tag": "F32"
                      },
                      "default_values": "0.0"
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "BehaviorComponent",
      "label": "Behavior Component",
      "default_values": "{ behavior_id: (() => { \n            return Symbol.for(\"BehaviorTreeId\");\n           })(), id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })() }",
      "docs": "Utilize a Behavior Tree (BT) to drive this entity's AI",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Uuid",
            "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
            "ty": {
              "tag": "Uuid"
            }
          }
        },
        {
          "name": "behavior_id",
          "label": "Behavior Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "BehaviorTree",
            "default_values": "(() => { \n            return Symbol.for(\"BehaviorTreeId\");\n           })()",
            "ty": "BehaviorTreeId"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "DebugFrustumComponent",
      "label": "Debug Frustum Component",
      "default_values": "{  }",
      "docs": null,
      "fields": [],
      "private": true
    },
    {
      "tag": "Struct",
      "name": "GoalComponent",
      "label": "Goal Component",
      "default_values": "{ id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), planner_id: (() => { \n            return Symbol.for(\"PlannerId\");\n           })() }",
      "docs": "Utilize a Goal-oriented action planner (GOAP) to drive this entity's AI",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Uuid",
            "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
            "ty": {
              "tag": "Uuid"
            }
          }
        },
        {
          "name": "planner_id",
          "label": "Planner Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Planner",
            "default_values": "(() => { \n            return Symbol.for(\"PlannerId\");\n           })()",
            "ty": "PlannerId"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "IdComponent",
      "label": "Id Component",
      "default_values": "{  }",
      "docs": null,
      "fields": [],
      "private": true
    },
    {
      "tag": "Struct",
      "name": "InputComponent",
      "label": "Input Component",
      "default_values": "{ sensitivity: 1.0, speed: { kilometers: 2.0, hours: 1.0 } }",
      "docs": "Allows the user to GhostCam around the world",
      "fields": [
        {
          "name": "sensitivity",
          "label": "Sensitivity",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        },
        {
          "name": "speed",
          "label": "Speed",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Kph",
            "default_values": "{ kph: 1.0}",
            "ty": "Kph"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "ModelComponent",
      "label": "Model Component",
      "default_values": "{ id: (() => { \n            return Symbol.for(\"ModelId\");\n           })(), offset: [0.0, 0.0, 0.0] }",
      "docs": "Attach a Model to a given entity",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Model",
            "default_values": "(() => { \n            return Symbol.for(\"ModelId\");\n           })()",
            "ty": "ModelId"
          }
        },
        {
          "name": "offset",
          "label": "Offset",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Vector3",
            "default_values": "[0.0, 0.0, 0.0]",
            "ty": "Vector3<f32>"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "NetworkedPlayerComponent",
      "label": "Networked Player Component",
      "default_values": "{  }",
      "docs": null,
      "fields": [],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "ParentComponent",
      "label": "Parent Component",
      "default_values": "{ id: (() => { \n            return Symbol.for(\"PrefabId\");\n           })() }",
      "docs": null,
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Prefab",
            "default_values": "(() => { \n            return Symbol.for(\"PrefabId\");\n           })()",
            "ty": "PrefabId"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "ParticleComponent",
      "label": "Particle Component",
      "default_values": "{ asset_id: (() => { \n            return Symbol.for(\"ParticleId\");\n           })(), id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })() }",
      "docs": "Attach a particle system to a given entity",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Uuid",
            "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
            "ty": {
              "tag": "Uuid"
            }
          }
        },
        {
          "name": "asset_id",
          "label": "Asset Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Particle",
            "default_values": "(() => { \n            return Symbol.for(\"ParticleId\");\n           })()",
            "ty": "ParticleId"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "PhysicsComponent",
      "label": "Physics Component",
      "default_values": "{ debug: false, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), joint: { body: { allow_rotation: [true, true, true], allow_translation: [true, true, true], ccd: true, collider_type: \"CapsuleY\", density: 1.0, dynamic_type: \"Dynamic\", friction: 0.1, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), is_sensor: false, restitution: 0.1 }, config: null, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), name: 'Joint', offset: [0.0, 0.0, 0.0] } }",
      "docs": "Add a physics body to the entity",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Uuid",
            "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
            "ty": {
              "tag": "Uuid"
            }
          }
        },
        {
          "name": "debug",
          "label": "Debug",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "Boolean"
            },
            "default_values": "false"
          }
        },
        {
          "name": "joint",
          "label": "Joint",
          "docs": null,
          "ty": {
            "tag": "Struct",
            "name": "PhysicsJoint",
            "label": "Physics Joint",
            "default_values": "{ body: { allow_rotation: [true, true, true], allow_translation: [true, true, true], ccd: true, collider_type: \"CapsuleY\", density: 1.0, dynamic_type: \"Dynamic\", friction: 0.1, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), is_sensor: false, restitution: 0.1 }, config: null, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), name: 'Joint', offset: [0.0, 0.0, 0.0] }",
            "docs": null,
            "fields": [
              {
                "name": "id",
                "label": "Id",
                "docs": null,
                "ty": {
                  "tag": "Type",
                  "name": "Uuid",
                  "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
                  "ty": {
                    "tag": "Uuid"
                  }
                }
              },
              {
                "name": "name",
                "label": "Name",
                "docs": null,
                "ty": {
                  "tag": "Primitive",
                  "ty": {
                    "tag": "String"
                  },
                  "default_values": "''"
                }
              },
              {
                "name": "offset",
                "label": "Offset",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Vector3",
                  "default_values": "[0.0, 0.0, 0.0]",
                  "ty": "Vector3<f32>"
                }
              },
              {
                "name": "body",
                "label": "Body",
                "docs": null,
                "ty": {
                  "tag": "Struct",
                  "name": "PhysicsBody",
                  "label": "Physics Body",
                  "default_values": "{ allow_rotation: [true, true, true], allow_translation: [true, true, true], ccd: true, collider_type: \"CapsuleY\", density: 1.0, dynamic_type: \"Dynamic\", friction: 0.1, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), is_sensor: false, restitution: 0.1 }",
                  "docs": null,
                  "fields": [
                    {
                      "name": "id",
                      "label": "Id",
                      "docs": null,
                      "ty": {
                        "tag": "Type",
                        "name": "Uuid",
                        "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
                        "ty": {
                          "tag": "Uuid"
                        }
                      }
                    },
                    {
                      "name": "dynamic_type",
                      "label": "Dynamic Type",
                      "docs": null,
                      "ty": {
                        "tag": "Enum",
                        "name": "DynamicType",
                        "label": "Dynamic Type",
                        "default_values": "\"Dynamic\"",
                        "docs": null,
                        "variants": [
                          {
                            "tag": "Unit",
                            "name": "Dynamic",
                            "docs": null,
                            "default_values": "\"Dynamic\""
                          },
                          {
                            "tag": "Unit",
                            "name": "Kinematic",
                            "docs": null,
                            "default_values": "\"Kinematic\""
                          },
                          {
                            "tag": "Unit",
                            "name": "Position",
                            "docs": null,
                            "default_values": "\"Position\""
                          },
                          {
                            "tag": "Unit",
                            "name": "Static",
                            "docs": null,
                            "default_values": "\"Static\""
                          },
                          {
                            "tag": "Struct",
                            "name": "CharacterController",
                            "label": "Character Controller",
                            "default_values": "{ auto_step: false, id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), is_velocity_based: false, max_slope_climb_angle: 0.0, min_slope_slide_angle: 0.0, shape_offset: 0.0, slide: false, snap_max_distance: 0.0, snap_to_ground: false, step_max_height: 0.0, step_min_width: 0.0, up_vector: [0.0, 0.0, 0.0] }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "id",
                                "label": "Id",
                                "docs": null,
                                "ty": {
                                  "tag": "Type",
                                  "name": "Uuid",
                                  "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
                                  "ty": {
                                    "tag": "Uuid"
                                  }
                                }
                              },
                              {
                                "name": "is_velocity_based",
                                "label": "Is Velocity Based",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "Boolean"
                                  },
                                  "default_values": "false"
                                }
                              },
                              {
                                "name": "up_vector",
                                "label": "Up Vector",
                                "docs": null,
                                "ty": {
                                  "tag": "Custom",
                                  "name": "Vector3",
                                  "default_values": "[0.0, 0.0, 0.0]",
                                  "ty": "Vector3<f32>"
                                }
                              },
                              {
                                "name": "shape_offset",
                                "label": "Shape Offset",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "slide",
                                "label": "Slide",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "Boolean"
                                  },
                                  "default_values": "false"
                                }
                              },
                              {
                                "name": "max_slope_climb_angle",
                                "label": "Max Slope Climb Angle",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "min_slope_slide_angle",
                                "label": "Min Slope Slide Angle",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "auto_step",
                                "label": "Auto Step",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "Boolean"
                                  },
                                  "default_values": "false"
                                }
                              },
                              {
                                "name": "step_min_width",
                                "label": "Step Min Width",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "step_max_height",
                                "label": "Step Max Height",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "snap_to_ground",
                                "label": "Snap To Ground",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "Boolean"
                                  },
                                  "default_values": "false"
                                }
                              },
                              {
                                "name": "snap_max_distance",
                                "label": "Snap Max Distance",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          }
                        ],
                        "private": false
                      }
                    },
                    {
                      "name": "collider_type",
                      "label": "Collider Type",
                      "docs": null,
                      "ty": {
                        "tag": "Enum",
                        "name": "ColliderType",
                        "label": "Collider Type",
                        "default_values": "\"CapsuleY\"",
                        "docs": null,
                        "variants": [
                          {
                            "tag": "Struct",
                            "name": "CapsuleY",
                            "label": "Capsule Y",
                            "default_values": "{ half_height: 1.0, radius: 1.0 }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "half_height",
                                "label": "Half Height",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "radius",
                                "label": "Radius",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          },
                          {
                            "tag": "Struct",
                            "name": "CapsuleX",
                            "label": "Capsule X",
                            "default_values": "{ half_height: 1.0, radius: 1.0 }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "half_height",
                                "label": "Half Height",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "radius",
                                "label": "Radius",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          },
                          {
                            "tag": "Struct",
                            "name": "CapsuleZ",
                            "label": "Capsule Z",
                            "default_values": "{ half_height: 1.0, radius: 1.0 }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "half_height",
                                "label": "Half Height",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "radius",
                                "label": "Radius",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          },
                          {
                            "tag": "Struct",
                            "name": "Cube",
                            "label": "Cube",
                            "default_values": "{ height: 1.0, length: 1.0, width: 1.0 }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "width",
                                "label": "Width",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "height",
                                "label": "Height",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "length",
                                "label": "Length",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          },
                          {
                            "tag": "Struct",
                            "name": "Sphere",
                            "label": "Sphere",
                            "default_values": "{ radius: 1.0 }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "radius",
                                "label": "Radius",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          },
                          {
                            "tag": "Struct",
                            "name": "Trimesh",
                            "label": "Trimesh",
                            "default_values": "{ id: (() => { \n            return Symbol.for(\"TrimeshId\");\n           })() }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "id",
                                "label": "Id",
                                "docs": null,
                                "ty": {
                                  "tag": "Reference",
                                  "name": "Identifiable",
                                  "reference": "Trimesh",
                                  "default_values": "(() => { \n            return Symbol.for(\"TrimeshId\");\n           })()",
                                  "ty": "TrimeshId"
                                }
                              }
                            ],
                            "private": false
                          },
                          {
                            "tag": "Struct",
                            "name": "Heightfield",
                            "label": "Heightfield",
                            "default_values": "{ half_length: 0.0, height: 0.0, id: (() => { \n            return Symbol.for(\"HeightfieldId\");\n           })() }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "id",
                                "label": "Id",
                                "docs": null,
                                "ty": {
                                  "tag": "Reference",
                                  "name": "Identifiable",
                                  "reference": "Heightfield",
                                  "default_values": "(() => { \n            return Symbol.for(\"HeightfieldId\");\n           })()",
                                  "ty": "HeightfieldId"
                                }
                              },
                              {
                                "name": "half_length",
                                "label": "Half Length",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "height",
                                "label": "Height",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          },
                          {
                            "tag": "Struct",
                            "name": "Cylinder",
                            "label": "Cylinder",
                            "default_values": "{ half_height: 1.0, radius: 1.0 }",
                            "docs": null,
                            "fields": [
                              {
                                "name": "half_height",
                                "label": "Half Height",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              },
                              {
                                "name": "radius",
                                "label": "Radius",
                                "docs": null,
                                "ty": {
                                  "tag": "Primitive",
                                  "ty": {
                                    "tag": "F32"
                                  },
                                  "default_values": "0.0"
                                }
                              }
                            ],
                            "private": false
                          }
                        ],
                        "private": false
                      }
                    },
                    {
                      "name": "is_sensor",
                      "label": "Is Sensor",
                      "docs": null,
                      "ty": {
                        "tag": "Primitive",
                        "ty": {
                          "tag": "Boolean"
                        },
                        "default_values": "false"
                      }
                    },
                    {
                      "name": "density",
                      "label": "Density",
                      "docs": null,
                      "ty": {
                        "tag": "Primitive",
                        "ty": {
                          "tag": "F32"
                        },
                        "default_values": "0.0"
                      }
                    },
                    {
                      "name": "friction",
                      "label": "Friction",
                      "docs": null,
                      "ty": {
                        "tag": "Primitive",
                        "ty": {
                          "tag": "F32"
                        },
                        "default_values": "0.0"
                      }
                    },
                    {
                      "name": "restitution",
                      "label": "Restitution",
                      "docs": null,
                      "ty": {
                        "tag": "Primitive",
                        "ty": {
                          "tag": "F32"
                        },
                        "default_values": "0.0"
                      }
                    },
                    {
                      "name": "allow_translation",
                      "label": "Allow Translation",
                      "docs": null,
                      "ty": {
                        "tag": "Primitive",
                        "ty": {
                          "tag": "Array",
                          "data": [
                            {
                              "tag": "Primitive",
                              "ty": {
                                "tag": "Boolean"
                              },
                              "default_values": "false"
                            },
                            3
                          ]
                        },
                        "default_values": "[false, false, false]"
                      }
                    },
                    {
                      "name": "allow_rotation",
                      "label": "Allow Rotation",
                      "docs": null,
                      "ty": {
                        "tag": "Primitive",
                        "ty": {
                          "tag": "Array",
                          "data": [
                            {
                              "tag": "Primitive",
                              "ty": {
                                "tag": "Boolean"
                              },
                              "default_values": "false"
                            },
                            3
                          ]
                        },
                        "default_values": "[false, false, false]"
                      }
                    },
                    {
                      "name": "ccd",
                      "label": "Ccd",
                      "docs": null,
                      "ty": {
                        "tag": "Primitive",
                        "ty": {
                          "tag": "Boolean"
                        },
                        "default_values": "false"
                      }
                    }
                  ],
                  "private": false
                }
              },
              {
                "name": "config",
                "label": "Config",
                "docs": null,
                "ty": {
                  "tag": "Type",
                  "name": "Option",
                  "default_values": "null",
                  "ty": {
                    "tag": "Option",
                    "data": {
                      "tag": "Enum",
                      "name": "JointConfig",
                      "label": "Joint Config",
                      "default_values": "\"Fixed\"",
                      "docs": null,
                      "variants": [
                        {
                          "tag": "Struct",
                          "name": "Fixed",
                          "label": "Fixed",
                          "default_values": "{ local_anchor: [0.0, 0.0, 0.0] }",
                          "docs": null,
                          "fields": [
                            {
                              "name": "local_anchor",
                              "label": "Local Anchor",
                              "docs": null,
                              "ty": {
                                "tag": "Custom",
                                "name": "Vector3",
                                "default_values": "[0.0, 0.0, 0.0]",
                                "ty": "Vector3<f32>"
                              }
                            }
                          ],
                          "private": false
                        },
                        {
                          "tag": "Struct",
                          "name": "Spherical",
                          "label": "Spherical",
                          "default_values": "{ local_anchor: [0.0, 0.0, 0.0] }",
                          "docs": null,
                          "fields": [
                            {
                              "name": "local_anchor",
                              "label": "Local Anchor",
                              "docs": null,
                              "ty": {
                                "tag": "Custom",
                                "name": "Vector3",
                                "default_values": "[0.0, 0.0, 0.0]",
                                "ty": "Vector3<f32>"
                              }
                            }
                          ],
                          "private": false
                        },
                        {
                          "tag": "Struct",
                          "name": "Revolute",
                          "label": "Revolute",
                          "default_values": "{ axis: [0.0, 0.0, 0.0], local_anchor: [0.0, 0.0, 0.0] }",
                          "docs": null,
                          "fields": [
                            {
                              "name": "axis",
                              "label": "Axis",
                              "docs": null,
                              "ty": {
                                "tag": "Custom",
                                "name": "Vector3",
                                "default_values": "[0.0, 0.0, 0.0]",
                                "ty": "Vector3<f32>"
                              }
                            },
                            {
                              "name": "local_anchor",
                              "label": "Local Anchor",
                              "docs": null,
                              "ty": {
                                "tag": "Custom",
                                "name": "Vector3",
                                "default_values": "[0.0, 0.0, 0.0]",
                                "ty": "Vector3<f32>"
                              }
                            }
                          ],
                          "private": false
                        }
                      ],
                      "private": false
                    }
                  }
                }
              }
            ],
            "private": false
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "PrefabComponent",
      "label": "Prefab Component",
      "default_values": "{ id: (() => { \n            return Symbol.for(\"PrefabId\");\n           })() }",
      "docs": "Allows you to refer to another prefab, and, automatically instantiate those prefabs at the\nlocation of your choosing. Useful for creating large spaces, or crowds of characters",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": "ID of the prefab you are trying to refer to",
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Prefab",
            "default_values": "(() => { \n            return Symbol.for(\"PrefabId\");\n           })()",
            "ty": "PrefabId"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "SelfComponent",
      "label": "Self Component",
      "default_values": "{  }",
      "docs": "Allows you to parent your component against another one, so that positioning of this component\ngets created the local space of the parent component",
      "fields": [],
      "private": true
    },
    {
      "tag": "Struct",
      "name": "SocketComponent",
      "label": "Socket Component",
      "default_values": "{ parent_id: (() => { \n            return Symbol.for(\"PrefabId\");\n           })(), socket_id: (() => { \n            return Symbol.for(\"SocketId\");\n           })() }",
      "docs": null,
      "fields": [
        {
          "name": "parent_id",
          "label": "Parent Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Prefab",
            "default_values": "(() => { \n            return Symbol.for(\"PrefabId\");\n           })()",
            "ty": "PrefabId"
          }
        },
        {
          "name": "socket_id",
          "label": "Socket Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Socket",
            "default_values": "(() => { \n            return Symbol.for(\"SocketId\");\n           })()",
            "ty": "SocketId"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "SpriteComponent",
      "label": "Sprite Component",
      "default_values": "{ alignment: { horizontal: 'Left', vertical: 'Top' }, id: (() => { \n            return Symbol.for(\"SpriteId\");\n           })(), opacity: 1.0, size: \"Relative\" }",
      "docs": "Attach a Model to a given entity",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Sprite",
            "default_values": "(() => { \n            return Symbol.for(\"SpriteId\");\n           })()",
            "ty": "SpriteId"
          }
        },
        {
          "name": "size",
          "label": "Size",
          "docs": null,
          "ty": {
            "tag": "Enum",
            "name": "Sizing",
            "label": "Sizing",
            "default_values": "\"Relative\"",
            "docs": null,
            "variants": [
              {
                "tag": "Unit",
                "name": "Relative",
                "docs": null,
                "default_values": "\"Relative\""
              },
              {
                "tag": "Unit",
                "name": "Absolute",
                "docs": null,
                "default_values": "\"Absolute\""
              }
            ],
            "private": false
          }
        },
        {
          "name": "alignment",
          "label": "Alignment",
          "docs": null,
          "ty": {
            "tag": "Struct",
            "name": "Alignment",
            "label": "Alignment",
            "default_values": "{ horizontal: 'Left', vertical: 'Top' }",
            "docs": null,
            "fields": [
              {
                "name": "horizontal",
                "label": "Horizontal",
                "docs": null,
                "ty": {
                  "tag": "Enum",
                  "name": "HorizontalAlignment",
                  "label": "Horizontal Alignment",
                  "default_values": "\"Left\"",
                  "docs": null,
                  "variants": [
                    {
                      "tag": "Unit",
                      "name": "Left",
                      "docs": null,
                      "default_values": "\"Left\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Middle",
                      "docs": null,
                      "default_values": "\"Middle\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Right",
                      "docs": null,
                      "default_values": "\"Right\""
                    }
                  ],
                  "private": false
                }
              },
              {
                "name": "vertical",
                "label": "Vertical",
                "docs": null,
                "ty": {
                  "tag": "Enum",
                  "name": "VerticalAlignment",
                  "label": "Vertical Alignment",
                  "default_values": "\"Top\"",
                  "docs": null,
                  "variants": [
                    {
                      "tag": "Unit",
                      "name": "Top",
                      "docs": null,
                      "default_values": "\"Top\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Middle",
                      "docs": null,
                      "default_values": "\"Middle\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Bottom",
                      "docs": null,
                      "default_values": "\"Bottom\""
                    }
                  ],
                  "private": false
                }
              }
            ],
            "private": false
          }
        },
        {
          "name": "opacity",
          "label": "Opacity",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "StateMachineComponent",
      "label": "State Machine Component",
      "default_values": "{ id: (() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })(), machine_id: (() => { \n            return Symbol.for(\"AnimationStateMachineId\");\n           })() }",
      "docs": "Utilize a state machine to more easily animate a mesh",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Uuid",
            "default_values": "(() => { \n      function uuidv4() {\n        return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n          (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n      };\n      return uuidv4()\n     })()",
            "ty": {
              "tag": "Uuid"
            }
          }
        },
        {
          "name": "machine_id",
          "label": "Machine Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "AnimationStateMachine",
            "default_values": "(() => { \n            return Symbol.for(\"AnimationStateMachineId\");\n           })()",
            "ty": "AnimationStateMachineId"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "TagComponent",
      "label": "Tag Component",
      "default_values": "{ name: '' }",
      "docs": null,
      "fields": [
        {
          "name": "name",
          "label": "Name",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "String"
            },
            "default_values": "''"
          }
        }
      ],
      "private": true
    },
    {
      "tag": "Struct",
      "name": "TerrainComponent",
      "label": "Terrain Component",
      "default_values": "{ grass: { blade_color: [0.0, 1.0, 0.0], blade_width: { meters: 0.1 }, density: 256, enabled: true, max_height: { meters: 0.3 }, max_lean: { radians: 0.785 }, max_rotation: { radians: 0.785 }, min_height: { meters: 0.1 }, min_lean: { radians: 0.0 }, min_rotation: { radians: 0.0 } }, id: (() => { \n            return Symbol.for(\"TerrainId\");\n           })(), terrain: { extra_detail: 0, height: { meters: 200.0 }, number_of_cascades: 5, terrain_length: { meters: 400.0 } } }",
      "docs": "Attach a terrain to a given component\nThe terrain itself needs to be built with the Software\ncalled Gaea: (Link: https://quadspinner.com/), and exported\n\nusing multiple tiles (at least 2x2).\n\nOnce exported, follow the following naming convention:\nterrain.{name}.{albedo|normal|height}.x{x}.y{y}\n\nExport the albedo node as rgb16\nExport the normal node as rgb16\nExport the height node as r32",
      "fields": [
        {
          "name": "id",
          "label": "Id",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Terrain",
            "default_values": "(() => { \n            return Symbol.for(\"TerrainId\");\n           })()",
            "ty": "TerrainId"
          }
        },
        {
          "name": "terrain",
          "label": "Terrain",
          "docs": null,
          "ty": {
            "tag": "Struct",
            "name": "TerrainConfiguration",
            "label": "Terrain Configuration",
            "default_values": "{ extra_detail: 0, height: { meters: 200.0 }, number_of_cascades: 5, terrain_length: { meters: 400.0 } }",
            "docs": null,
            "fields": [
              {
                "name": "height",
                "label": "Height",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Meters",
                  "default_values": "{ meters: 0.0 }",
                  "ty": "Meters"
                }
              },
              {
                "name": "terrain_length",
                "label": "Terrain Length",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Meters",
                  "default_values": "{ meters: 0.0 }",
                  "ty": "Meters"
                }
              },
              {
                "name": "number_of_cascades",
                "label": "Number Of Cascades",
                "docs": null,
                "ty": {
                  "tag": "Primitive",
                  "ty": {
                    "tag": "U32"
                  },
                  "default_values": "0"
                }
              },
              {
                "name": "extra_detail",
                "label": "Extra Detail",
                "docs": null,
                "ty": {
                  "tag": "Primitive",
                  "ty": {
                    "tag": "U32"
                  },
                  "default_values": "0"
                }
              }
            ],
            "private": false
          }
        },
        {
          "name": "grass",
          "label": "Grass",
          "docs": null,
          "ty": {
            "tag": "Struct",
            "name": "GrassConfiguration",
            "label": "Grass Configuration",
            "default_values": "{ blade_color: [0.0, 1.0, 0.0], blade_width: { meters: 0.1 }, density: 256, enabled: true, max_height: { meters: 0.3 }, max_lean: { radians: 0.785 }, max_rotation: { radians: 0.785 }, min_height: { meters: 0.1 }, min_lean: { radians: 0.0 }, min_rotation: { radians: 0.0 } }",
            "docs": null,
            "fields": [
              {
                "name": "enabled",
                "label": "Enabled",
                "docs": null,
                "ty": {
                  "tag": "Primitive",
                  "ty": {
                    "tag": "Boolean"
                  },
                  "default_values": "false"
                }
              },
              {
                "name": "density",
                "label": "Density",
                "docs": null,
                "ty": {
                  "tag": "Primitive",
                  "ty": {
                    "tag": "U32"
                  },
                  "default_values": "0"
                }
              },
              {
                "name": "min_height",
                "label": "Min Height",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Meters",
                  "default_values": "{ meters: 0.0 }",
                  "ty": "Meters"
                }
              },
              {
                "name": "max_height",
                "label": "Max Height",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Meters",
                  "default_values": "{ meters: 0.0 }",
                  "ty": "Meters"
                }
              },
              {
                "name": "min_rotation",
                "label": "Min Rotation",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Radians",
                  "default_values": "{ radians: 0.0 }",
                  "ty": "Radians"
                }
              },
              {
                "name": "max_rotation",
                "label": "Max Rotation",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Radians",
                  "default_values": "{ radians: 0.0 }",
                  "ty": "Radians"
                }
              },
              {
                "name": "min_lean",
                "label": "Min Lean",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Radians",
                  "default_values": "{ radians: 0.0 }",
                  "ty": "Radians"
                }
              },
              {
                "name": "max_lean",
                "label": "Max Lean",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Radians",
                  "default_values": "{ radians: 0.0 }",
                  "ty": "Radians"
                }
              },
              {
                "name": "blade_width",
                "label": "Blade Width",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Meters",
                  "default_values": "{ meters: 0.0 }",
                  "ty": "Meters"
                }
              },
              {
                "name": "blade_color",
                "label": "Blade Color",
                "docs": null,
                "ty": {
                  "tag": "Custom",
                  "name": "Vector3",
                  "default_values": "[0.0, 0.0, 0.0]",
                  "ty": "Vector3<f32>"
                }
              }
            ],
            "private": false
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "TextComponent",
      "label": "Text Component",
      "default_values": "{ block_alignment: { horizontal: 'Left', vertical: 'Top' }, color: [0.0, 0.0, 0.0, 1.0], font: (() => { \n            return Symbol.for(\"FontId\");\n           })(), font_size: 16.0, kerning: 1.2, line_height: 1.5, max_width: 300.0, opacity: 1.0, text: 'Hello, World', text_alignment: 'Left' }",
      "docs": "Work-in-progress",
      "fields": [
        {
          "name": "font",
          "label": "Font",
          "docs": null,
          "ty": {
            "tag": "Reference",
            "name": "Identifiable",
            "reference": "Font",
            "default_values": "(() => { \n            return Symbol.for(\"FontId\");\n           })()",
            "ty": "FontId"
          }
        },
        {
          "name": "text",
          "label": "Text",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "String"
            },
            "default_values": "''"
          }
        },
        {
          "name": "color",
          "label": "Color",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Vector4",
            "default_values": "[0.0, 0.0, 0.0, 0.0]",
            "ty": "Rgba"
          }
        },
        {
          "name": "font_size",
          "label": "Font Size",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        },
        {
          "name": "opacity",
          "label": "Opacity",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        },
        {
          "name": "line_height",
          "label": "Line Height",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        },
        {
          "name": "kerning",
          "label": "Kerning",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        },
        {
          "name": "max_width",
          "label": "Max Width",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "F32"
            },
            "default_values": "0.0"
          }
        },
        {
          "name": "text_alignment",
          "label": "Text Alignment",
          "docs": null,
          "ty": {
            "tag": "Enum",
            "name": "HorizontalAlignment",
            "label": "Horizontal Alignment",
            "default_values": "\"Left\"",
            "docs": null,
            "variants": [
              {
                "tag": "Unit",
                "name": "Left",
                "docs": null,
                "default_values": "\"Left\""
              },
              {
                "tag": "Unit",
                "name": "Middle",
                "docs": null,
                "default_values": "\"Middle\""
              },
              {
                "tag": "Unit",
                "name": "Right",
                "docs": null,
                "default_values": "\"Right\""
              }
            ],
            "private": false
          }
        },
        {
          "name": "block_alignment",
          "label": "Block Alignment",
          "docs": null,
          "ty": {
            "tag": "Struct",
            "name": "Alignment",
            "label": "Alignment",
            "default_values": "{ horizontal: 'Left', vertical: 'Top' }",
            "docs": null,
            "fields": [
              {
                "name": "horizontal",
                "label": "Horizontal",
                "docs": null,
                "ty": {
                  "tag": "Enum",
                  "name": "HorizontalAlignment",
                  "label": "Horizontal Alignment",
                  "default_values": "\"Left\"",
                  "docs": null,
                  "variants": [
                    {
                      "tag": "Unit",
                      "name": "Left",
                      "docs": null,
                      "default_values": "\"Left\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Middle",
                      "docs": null,
                      "default_values": "\"Middle\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Right",
                      "docs": null,
                      "default_values": "\"Right\""
                    }
                  ],
                  "private": false
                }
              },
              {
                "name": "vertical",
                "label": "Vertical",
                "docs": null,
                "ty": {
                  "tag": "Enum",
                  "name": "VerticalAlignment",
                  "label": "Vertical Alignment",
                  "default_values": "\"Top\"",
                  "docs": null,
                  "variants": [
                    {
                      "tag": "Unit",
                      "name": "Top",
                      "docs": null,
                      "default_values": "\"Top\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Middle",
                      "docs": null,
                      "default_values": "\"Middle\""
                    },
                    {
                      "tag": "Unit",
                      "name": "Bottom",
                      "docs": null,
                      "default_values": "\"Bottom\""
                    }
                  ],
                  "private": false
                }
              }
            ],
            "private": false
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "TransformComponent",
      "label": "Transform Component",
      "default_values": "{ rotation: [0.0, 0.0, 0.0], scale: [0.0, 0.0, 0.0], translation: [0.0, 0.0, 0.0] }",
      "docs": null,
      "fields": [
        {
          "name": "translation",
          "label": "Translation",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Vector3",
            "default_values": "[0.0, 0.0, 0.0]",
            "ty": "Vector3<f32>"
          }
        },
        {
          "name": "rotation",
          "label": "Rotation",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Vector3",
            "default_values": "[0.0, 0.0, 0.0]",
            "ty": "Vector3<f32>"
          }
        },
        {
          "name": "scale",
          "label": "Scale",
          "docs": null,
          "ty": {
            "tag": "Custom",
            "name": "Vector3",
            "default_values": "[0.0, 0.0, 0.0]",
            "ty": "Vector3<f32>"
          }
        }
      ],
      "private": true
    },
    {
      "tag": "Enum",
      "name": "CameraComponent",
      "label": "Camera Component",
      "default_values": "\"Orthographic\"",
      "docs": "What type of camera do you want to use for rendering the world",
      "variants": [
        {
          "tag": "Struct",
          "name": "Orthographic",
          "label": "Orthographic",
          "default_values": "{ bottom: 0.0, left: 0.0, primary: true, right: 1000.0, top: 1000.0, zfar: 100.0, znear: 0.1 }",
          "docs": null,
          "fields": [
            {
              "name": "left",
              "label": "Left",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "right",
              "label": "Right",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "bottom",
              "label": "Bottom",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "top",
              "label": "Top",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "znear",
              "label": "Znear",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "zfar",
              "label": "Zfar",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "primary",
              "label": "Primary",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "Boolean"
                },
                "default_values": "false"
              }
            }
          ],
          "private": false
        },
        {
          "tag": "Struct",
          "name": "Perspective",
          "label": "Perspective",
          "default_values": "{ fovy: {value: 0.7853982}, primary: true, zfar: 100.0, znear: 0.1 }",
          "docs": null,
          "fields": [
            {
              "name": "fovy",
              "label": "Fovy",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Radians",
                "default_values": "{ radians: 0.0 }",
                "ty": "Radians"
              }
            },
            {
              "name": "znear",
              "label": "Znear",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "zfar",
              "label": "Zfar",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "primary",
              "label": "Primary",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "Boolean"
                },
                "default_values": "false"
              }
            }
          ],
          "private": false
        }
      ],
      "private": false
    },
    {
      "tag": "Enum",
      "name": "LightComponent",
      "label": "Light Component",
      "default_values": "\"Unknown\"",
      "docs": "Attach a light source to a given entity. That can be a directional light,\npoint light, or spot light",
      "variants": [
        {
          "tag": "Unit",
          "name": "Unknown",
          "docs": null,
          "default_values": "\"Unknown\""
        },
        {
          "tag": "Struct",
          "name": "Directional",
          "label": "Directional",
          "default_values": "{ azimuth: { value: 0.0 }, inclination: { value: 1.0 }, intensity: 1.0, radiance: [1.0, 1.0, 1.0], should_cast_shadows: false }",
          "docs": null,
          "fields": [
            {
              "name": "radiance",
              "label": "Radiance",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Vector3",
                "default_values": "[0.0, 0.0, 0.0]",
                "ty": "Vector3<f32>"
              }
            },
            {
              "name": "intensity",
              "label": "Intensity",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "azimuth",
              "label": "Azimuth",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Radians",
                "default_values": "{ radians: 0.0 }",
                "ty": "Radians"
              }
            },
            {
              "name": "inclination",
              "label": "Inclination",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Radians",
                "default_values": "{ radians: 0.0 }",
                "ty": "Radians"
              }
            },
            {
              "name": "should_cast_shadows",
              "label": "Should Cast Shadows",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "Boolean"
                },
                "default_values": "false"
              }
            }
          ],
          "private": false
        },
        {
          "tag": "Struct",
          "name": "Point",
          "label": "Point",
          "default_values": "{ are_shadows_soft: false, falloff: 0.0, intensity: 1.0, light_size: 0.5, min_radius: 1.0, radiance: [1.0, 1.0, 1.0], radius: 1.0, should_cast_shadows: false }",
          "docs": null,
          "fields": [
            {
              "name": "radiance",
              "label": "Radiance",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Vector3",
                "default_values": "[0.0, 0.0, 0.0]",
                "ty": "Vector3<f32>"
              }
            },
            {
              "name": "intensity",
              "label": "Intensity",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "light_size",
              "label": "Light Size",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "min_radius",
              "label": "Min Radius",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "falloff",
              "label": "Falloff",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "radius",
              "label": "Radius",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "should_cast_shadows",
              "label": "Should Cast Shadows",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "Boolean"
                },
                "default_values": "false"
              }
            },
            {
              "name": "are_shadows_soft",
              "label": "Are Shadows Soft",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "Boolean"
                },
                "default_values": "false"
              }
            }
          ],
          "private": false
        },
        {
          "tag": "Struct",
          "name": "Spot",
          "label": "Spot",
          "default_values": "{ are_shadows_soft: false, cone_length: 1.0, inner_angle: { value: 0.1 }, intensity: 1.0, outer_angle: { value: 0.2 }, radiance: [1.0, 1.0, 1.0], should_cast_shadows: false }",
          "docs": null,
          "fields": [
            {
              "name": "radiance",
              "label": "Radiance",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Vector3",
                "default_values": "[0.0, 0.0, 0.0]",
                "ty": "Vector3<f32>"
              }
            },
            {
              "name": "intensity",
              "label": "Intensity",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "cone_length",
              "label": "Cone Length",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "should_cast_shadows",
              "label": "Should Cast Shadows",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "Boolean"
                },
                "default_values": "false"
              }
            },
            {
              "name": "are_shadows_soft",
              "label": "Are Shadows Soft",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "Boolean"
                },
                "default_values": "false"
              }
            },
            {
              "name": "inner_angle",
              "label": "Inner Angle",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Radians",
                "default_values": "{ radians: 0.0 }",
                "ty": "Radians"
              }
            },
            {
              "name": "outer_angle",
              "label": "Outer Angle",
              "docs": null,
              "ty": {
                "tag": "Custom",
                "name": "Radians",
                "default_values": "{ radians: 0.0 }",
                "ty": "Radians"
              }
            }
          ],
          "private": false
        }
      ],
      "private": false
    },
    {
      "tag": "Enum",
      "name": "SkyLightComponent",
      "label": "Sky Light Component",
      "default_values": "\"Image\"",
      "docs": "Add a skylight to the scene. You can choose between an Image-based lighting\nsystem (IBL), or fully dynamic (dynamically generated skies).",
      "variants": [
        {
          "tag": "Struct",
          "name": "Image",
          "label": "Image",
          "default_values": "{ id: (() => { \n            return Symbol.for(\"HdrId\");\n           })(), intensity: 0.0 }",
          "docs": null,
          "fields": [
            {
              "name": "id",
              "label": "Id",
              "docs": null,
              "ty": {
                "tag": "Reference",
                "name": "Identifiable",
                "reference": "Hdr",
                "default_values": "(() => { \n            return Symbol.for(\"HdrId\");\n           })()",
                "ty": "HdrId"
              }
            },
            {
              "name": "intensity",
              "label": "Intensity",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            }
          ],
          "private": false
        },
        {
          "tag": "Struct",
          "name": "Dynamic",
          "label": "Dynamic",
          "default_values": "{ id: (() => { \n            return Symbol.for(\"BackgroundId\");\n           })(), intensity: 1.0, turbidity: 2.0 }",
          "docs": null,
          "fields": [
            {
              "name": "id",
              "label": "Id",
              "docs": null,
              "ty": {
                "tag": "Reference",
                "name": "Identifiable",
                "reference": "Background",
                "default_values": "(() => { \n            return Symbol.for(\"BackgroundId\");\n           })()",
                "ty": "BackgroundId"
              }
            },
            {
              "name": "turbidity",
              "label": "Turbidity",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            },
            {
              "name": "intensity",
              "label": "Intensity",
              "docs": null,
              "ty": {
                "tag": "Primitive",
                "ty": {
                  "tag": "F32"
                },
                "default_values": "0.0"
              }
            }
          ],
          "private": false
        }
      ],
      "private": false
    }
  ],
  "animations": [
    {
      "tag": "Struct",
      "name": "AccelerationThreshold",
      "label": "Acceleration Threshold",
      "default_values": "{ speed: { kph: 5.0 } }",
      "docs": "Reacts to an entity that accelerates beyond a threshold",
      "fields": [
        {
          "name": "speed",
          "label": "Speed",
          "docs": "Begin transition after reaching this speed",
          "ty": {
            "tag": "Custom",
            "name": "Kph",
            "default_values": "{ kph: 1.0}",
            "ty": "Kph"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "DecelerationThreshold",
      "label": "Deceleration Threshold",
      "default_values": "{ speed: { kph: 5.0 } }",
      "docs": "Reacts to an entity that decelerates beyond a threshold",
      "fields": [
        {
          "name": "speed",
          "label": "Speed",
          "docs": "Begin transition after reaching this speed",
          "ty": {
            "tag": "Custom",
            "name": "Kph",
            "default_values": "{ kph: 1.0}",
            "ty": "Kph"
          }
        }
      ],
      "private": false
    }
  ],
  "behaviors": [
    {
      "tag": "Struct",
      "name": "Fallback",
      "label": "Fallback",
      "default_values": "{ children: [], last_successful_child: null }",
      "docs": null,
      "fields": [
        {
          "name": "children",
          "label": "Children",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Vec",
            "default_values": "[]",
            "ty": {
              "tag": "Vector",
              "data": {
                "tag": "Type",
                "name": "Behavior",
                "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                "ty": {
                  "tag": "Dynamic"
                }
              }
            }
          }
        },
        {
          "name": "last_successful_child",
          "label": "Last Successful Child",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Option",
            "default_values": "null",
            "ty": {
              "tag": "Option",
              "data": {
                "tag": "Primitive",
                "ty": {
                  "tag": "USize"
                },
                "default_values": "0"
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Inverter",
      "label": "Inverter",
      "default_values": "{ child: null }",
      "docs": "Inverts the results of its child.\nIf the child reports Status::Success it will report Status::Failure.\nIf the child reports Status::Failure it will report Status::Success.\nIf the child reports Status::Running it will do nothing.",
      "fields": [
        {
          "name": "child",
          "label": "Child",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Option",
            "default_values": "null",
            "ty": {
              "tag": "Option",
              "data": {
                "tag": "Struct",
                "name": "BehaviorNode",
                "label": "Behavior Node",
                "default_values": "{ id: (() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })(), node_type: (() => { return Symbol.for(\"BehaviorNodeId\"); })(), position: { x: 0.0, y: 0.0 } }",
                "docs": null,
                "fields": [
                  {
                    "name": "id",
                    "label": "Id",
                    "docs": null,
                    "ty": {
                      "tag": "Reference",
                      "name": "Identifiable",
                      "reference": "BehaviorNode",
                      "default_values": "(() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })()",
                      "ty": "BehaviorNodeId"
                    }
                  },
                  {
                    "name": "node_type",
                    "label": "Node Type",
                    "docs": null,
                    "ty": {
                      "tag": "Type",
                      "name": "Behavior",
                      "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                      "ty": {
                        "tag": "Dynamic"
                      }
                    }
                  },
                  {
                    "name": "position",
                    "label": "Position",
                    "docs": null,
                    "ty": {
                      "tag": "Struct",
                      "name": "Position",
                      "label": "Position",
                      "default_values": "{ x: 0.0, y: 0.0 }",
                      "docs": null,
                      "fields": [
                        {
                          "name": "x",
                          "label": "X",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        },
                        {
                          "name": "y",
                          "label": "Y",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        }
                      ],
                      "private": false
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "LogMessage",
      "label": "Log Message",
      "default_values": "{ message: '' }",
      "docs": "Logs a message to the console. Useful for debugging.",
      "fields": [
        {
          "name": "message",
          "label": "Message",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "String"
            },
            "default_values": "''"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Parallel",
      "label": "Parallel",
      "default_values": "{ children: [], failure_threshold: 0, success_threshold: 0 }",
      "docs": null,
      "fields": [
        {
          "name": "children",
          "label": "Children",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Vec",
            "default_values": "[]",
            "ty": {
              "tag": "Vector",
              "data": {
                "tag": "Type",
                "name": "Behavior",
                "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                "ty": {
                  "tag": "Dynamic"
                }
              }
            }
          }
        },
        {
          "name": "success_threshold",
          "label": "Success Threshold",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "USize"
            },
            "default_values": "0"
          }
        },
        {
          "name": "failure_threshold",
          "label": "Failure Threshold",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "USize"
            },
            "default_values": "0"
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Priority",
      "label": "Priority",
      "default_values": "{ children: [] }",
      "docs": null,
      "fields": [
        {
          "name": "children",
          "label": "Children",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Vec",
            "default_values": "[]",
            "ty": {
              "tag": "Vector",
              "data": {
                "tag": "Type",
                "name": "Behavior",
                "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                "ty": {
                  "tag": "Dynamic"
                }
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "RandomSelector",
      "label": "Random Selector",
      "default_values": "{ children: [] }",
      "docs": null,
      "fields": [
        {
          "name": "children",
          "label": "Children",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Vec",
            "default_values": "[]",
            "ty": {
              "tag": "Vector",
              "data": {
                "tag": "Type",
                "name": "Behavior",
                "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                "ty": {
                  "tag": "Dynamic"
                }
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Repeater",
      "label": "Repeater",
      "default_values": "{ child: null, count: 0 }",
      "docs": null,
      "fields": [
        {
          "name": "count",
          "label": "Count",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "USize"
            },
            "default_values": "0"
          }
        },
        {
          "name": "child",
          "label": "Child",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Option",
            "default_values": "null",
            "ty": {
              "tag": "Option",
              "data": {
                "tag": "Struct",
                "name": "BehaviorNode",
                "label": "Behavior Node",
                "default_values": "{ id: (() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })(), node_type: (() => { return Symbol.for(\"BehaviorNodeId\"); })(), position: { x: 0.0, y: 0.0 } }",
                "docs": null,
                "fields": [
                  {
                    "name": "id",
                    "label": "Id",
                    "docs": null,
                    "ty": {
                      "tag": "Reference",
                      "name": "Identifiable",
                      "reference": "BehaviorNode",
                      "default_values": "(() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })()",
                      "ty": "BehaviorNodeId"
                    }
                  },
                  {
                    "name": "node_type",
                    "label": "Node Type",
                    "docs": null,
                    "ty": {
                      "tag": "Type",
                      "name": "Behavior",
                      "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                      "ty": {
                        "tag": "Dynamic"
                      }
                    }
                  },
                  {
                    "name": "position",
                    "label": "Position",
                    "docs": null,
                    "ty": {
                      "tag": "Struct",
                      "name": "Position",
                      "label": "Position",
                      "default_values": "{ x: 0.0, y: 0.0 }",
                      "docs": null,
                      "fields": [
                        {
                          "name": "x",
                          "label": "X",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        },
                        {
                          "name": "y",
                          "label": "Y",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        }
                      ],
                      "private": false
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Root",
      "label": "Root",
      "default_values": "{ child: null }",
      "docs": "Private Behavior. Acts as a root node for the whole tree, and cannot be deleted.\nIt only passes through its results, if it contains a child node.",
      "fields": [
        {
          "name": "child",
          "label": "Child",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Option",
            "default_values": "null",
            "ty": {
              "tag": "Option",
              "data": {
                "tag": "Struct",
                "name": "BehaviorNode",
                "label": "Behavior Node",
                "default_values": "{ id: (() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })(), node_type: (() => { return Symbol.for(\"BehaviorNodeId\"); })(), position: { x: 0.0, y: 0.0 } }",
                "docs": null,
                "fields": [
                  {
                    "name": "id",
                    "label": "Id",
                    "docs": null,
                    "ty": {
                      "tag": "Reference",
                      "name": "Identifiable",
                      "reference": "BehaviorNode",
                      "default_values": "(() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })()",
                      "ty": "BehaviorNodeId"
                    }
                  },
                  {
                    "name": "node_type",
                    "label": "Node Type",
                    "docs": null,
                    "ty": {
                      "tag": "Type",
                      "name": "Behavior",
                      "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                      "ty": {
                        "tag": "Dynamic"
                      }
                    }
                  },
                  {
                    "name": "position",
                    "label": "Position",
                    "docs": null,
                    "ty": {
                      "tag": "Struct",
                      "name": "Position",
                      "label": "Position",
                      "default_values": "{ x: 0.0, y: 0.0 }",
                      "docs": null,
                      "fields": [
                        {
                          "name": "x",
                          "label": "X",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        },
                        {
                          "name": "y",
                          "label": "Y",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        }
                      ],
                      "private": false
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Select",
      "label": "Select",
      "default_values": "{ children: [] }",
      "docs": "Acts as a root node for the whole tree, and cannot be deleted.\nIt only passes through its results, if it contains a child node.",
      "fields": [
        {
          "name": "children",
          "label": "Children",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Vec",
            "default_values": "[]",
            "ty": {
              "tag": "Vector",
              "data": {
                "tag": "Struct",
                "name": "BehaviorNode",
                "label": "Behavior Node",
                "default_values": "{ id: (() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })(), node_type: (() => { return Symbol.for(\"BehaviorNodeId\"); })(), position: { x: 0.0, y: 0.0 } }",
                "docs": null,
                "fields": [
                  {
                    "name": "id",
                    "label": "Id",
                    "docs": null,
                    "ty": {
                      "tag": "Reference",
                      "name": "Identifiable",
                      "reference": "BehaviorNode",
                      "default_values": "(() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })()",
                      "ty": "BehaviorNodeId"
                    }
                  },
                  {
                    "name": "node_type",
                    "label": "Node Type",
                    "docs": null,
                    "ty": {
                      "tag": "Type",
                      "name": "Behavior",
                      "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                      "ty": {
                        "tag": "Dynamic"
                      }
                    }
                  },
                  {
                    "name": "position",
                    "label": "Position",
                    "docs": null,
                    "ty": {
                      "tag": "Struct",
                      "name": "Position",
                      "label": "Position",
                      "default_values": "{ x: 0.0, y: 0.0 }",
                      "docs": null,
                      "fields": [
                        {
                          "name": "x",
                          "label": "X",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        },
                        {
                          "name": "y",
                          "label": "Y",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        }
                      ],
                      "private": false
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Sequence",
      "label": "Sequence",
      "default_values": "{ children: [] }",
      "docs": "Acts as a root node for the whole tree, and cannot be deleted.\nIt only passes through its results, if it contains a child node.",
      "fields": [
        {
          "name": "children",
          "label": "Children",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Vec",
            "default_values": "[]",
            "ty": {
              "tag": "Vector",
              "data": {
                "tag": "Struct",
                "name": "BehaviorNode",
                "label": "Behavior Node",
                "default_values": "{ id: (() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })(), node_type: (() => { return Symbol.for(\"BehaviorNodeId\"); })(), position: { x: 0.0, y: 0.0 } }",
                "docs": null,
                "fields": [
                  {
                    "name": "id",
                    "label": "Id",
                    "docs": null,
                    "ty": {
                      "tag": "Reference",
                      "name": "Identifiable",
                      "reference": "BehaviorNode",
                      "default_values": "(() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })()",
                      "ty": "BehaviorNodeId"
                    }
                  },
                  {
                    "name": "node_type",
                    "label": "Node Type",
                    "docs": null,
                    "ty": {
                      "tag": "Type",
                      "name": "Behavior",
                      "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                      "ty": {
                        "tag": "Dynamic"
                      }
                    }
                  },
                  {
                    "name": "position",
                    "label": "Position",
                    "docs": null,
                    "ty": {
                      "tag": "Struct",
                      "name": "Position",
                      "label": "Position",
                      "default_values": "{ x: 0.0, y: 0.0 }",
                      "docs": null,
                      "fields": [
                        {
                          "name": "x",
                          "label": "X",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        },
                        {
                          "name": "y",
                          "label": "Y",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        }
                      ],
                      "private": false
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Throttle",
      "label": "Throttle",
      "default_values": "{ child: null, interval: 0 }",
      "docs": "Throttles the execution of its child",
      "fields": [
        {
          "name": "interval",
          "label": "Interval",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "U64"
            },
            "default_values": "0"
          }
        },
        {
          "name": "child",
          "label": "Child",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Option",
            "default_values": "null",
            "ty": {
              "tag": "Option",
              "data": {
                "tag": "Struct",
                "name": "BehaviorNode",
                "label": "Behavior Node",
                "default_values": "{ id: (() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })(), node_type: (() => { return Symbol.for(\"BehaviorNodeId\"); })(), position: { x: 0.0, y: 0.0 } }",
                "docs": null,
                "fields": [
                  {
                    "name": "id",
                    "label": "Id",
                    "docs": null,
                    "ty": {
                      "tag": "Reference",
                      "name": "Identifiable",
                      "reference": "BehaviorNode",
                      "default_values": "(() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })()",
                      "ty": "BehaviorNodeId"
                    }
                  },
                  {
                    "name": "node_type",
                    "label": "Node Type",
                    "docs": null,
                    "ty": {
                      "tag": "Type",
                      "name": "Behavior",
                      "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                      "ty": {
                        "tag": "Dynamic"
                      }
                    }
                  },
                  {
                    "name": "position",
                    "label": "Position",
                    "docs": null,
                    "ty": {
                      "tag": "Struct",
                      "name": "Position",
                      "label": "Position",
                      "default_values": "{ x: 0.0, y: 0.0 }",
                      "docs": null,
                      "fields": [
                        {
                          "name": "x",
                          "label": "X",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        },
                        {
                          "name": "y",
                          "label": "Y",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        }
                      ],
                      "private": false
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    },
    {
      "tag": "Struct",
      "name": "Timeout",
      "label": "Timeout",
      "default_values": "{ child: null, timeout: 0 }",
      "docs": "Ensures its child only runs for a period of time.",
      "fields": [
        {
          "name": "timeout",
          "label": "Timeout",
          "docs": null,
          "ty": {
            "tag": "Primitive",
            "ty": {
              "tag": "U64"
            },
            "default_values": "0"
          }
        },
        {
          "name": "child",
          "label": "Child",
          "docs": null,
          "ty": {
            "tag": "Type",
            "name": "Option",
            "default_values": "null",
            "ty": {
              "tag": "Option",
              "data": {
                "tag": "Struct",
                "name": "BehaviorNode",
                "label": "Behavior Node",
                "default_values": "{ id: (() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })(), node_type: (() => { return Symbol.for(\"BehaviorNodeId\"); })(), position: { x: 0.0, y: 0.0 } }",
                "docs": null,
                "fields": [
                  {
                    "name": "id",
                    "label": "Id",
                    "docs": null,
                    "ty": {
                      "tag": "Reference",
                      "name": "Identifiable",
                      "reference": "BehaviorNode",
                      "default_values": "(() => { \n            return Symbol.for(\"BehaviorNodeId\");\n           })()",
                      "ty": "BehaviorNodeId"
                    }
                  },
                  {
                    "name": "node_type",
                    "label": "Node Type",
                    "docs": null,
                    "ty": {
                      "tag": "Type",
                      "name": "Behavior",
                      "default_values": "(() => { return Symbol.for(\"BehaviorNodeId\"); })()",
                      "ty": {
                        "tag": "Dynamic"
                      }
                    }
                  },
                  {
                    "name": "position",
                    "label": "Position",
                    "docs": null,
                    "ty": {
                      "tag": "Struct",
                      "name": "Position",
                      "label": "Position",
                      "default_values": "{ x: 0.0, y: 0.0 }",
                      "docs": null,
                      "fields": [
                        {
                          "name": "x",
                          "label": "X",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        },
                        {
                          "name": "y",
                          "label": "Y",
                          "docs": null,
                          "ty": {
                            "tag": "Primitive",
                            "ty": {
                              "tag": "F32"
                            },
                            "default_values": "0.0"
                          }
                        }
                      ],
                      "private": false
                    }
                  }
                ],
                "private": false
              }
            }
          }
        }
      ],
      "private": false
    }
  ],
  "goals": [],
  "actions": [],
  "sensors": []
}